<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.punya</groupId>
  <artifactId>springboot-springmvc-app</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  <packaging>war</packaging>
  
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.1.2.RELEASE</version>
		<!-- <version>2.0.0.RELEASE</version> -->
		<!-- <version>1.5.4.RELEASE</version> -->
		<!-- <version>1.4.1.RELEASE</version> -->
		<!-- <version>1.3.1.RELEASE</version> -->
		<!-- <version>1.2.1.RELEASE</version> -->
		<!-- <version>1.1.1.RELEASE</version> -->
		<!-- <version>1.0.1.RELEASE</version> -->
		<relativePath />
	</parent>

	<properties>
		
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		
		<java.version>1.8</java.version>
		
		<!-- Required For .war packaging -->
		<start-class>com.springboot.SpringBootSpringMvcWarApp</start-class>
		
		<failOnMissingWebXml>false</failOnMissingWebXml>
		
		<jquery.version>3.0.0</jquery.version>
		<bootstrap.version>4.2.1</bootstrap.version>
		<angularjs.version>1.4.9</angularjs.version>
		
		<sonar-maven-plugin.version>2.4</sonar-maven-plugin.version>
		
		<!-- <spring-cloud.version>Edgware.RELEASE</spring-cloud.version> -->
		
	</properties>

	<dependencies>
	
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
			<!-- <exclusions>
				<exclusion>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-starter-tomcat</artifactId>
				</exclusion>
			</exclusions> -->
		</dependency>

		<!-- for useing jetty server as embedded server -->
		<!-- <dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-jetty</artifactId>
		</dependency> -->
		
		<!-- for useing tomcat server as embedded server -->
		<!-- <dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-tomcat</artifactId>
		</dependency> -->
	
		<!-- Required when we are working with JSP -->
		<dependency>
			<groupId>org.apache.tomcat.embed</groupId>
			<artifactId>tomcat-embed-jasper</artifactId>
			<!-- <scope>provided</scope> -->
		</dependency>
		<dependency>
			<groupId>jstl</groupId>
			<artifactId>jstl</artifactId>
			<version>1.2</version>
		</dependency>
		<dependency>
			<groupId>taglibs</groupId>
			<artifactId>standard</artifactId>
			<version>1.1.2</version>
		</dependency>
		
		<!-- Optional, for jquery -->
		<dependency>
			<groupId>org.webjars</groupId>
			<artifactId>jquery</artifactId>
			<version>${jquery.version}</version>
		</dependency>
		<!-- Optional, for bootstrap -->
		<dependency>
			<groupId>org.webjars</groupId>
			<artifactId>bootstrap</artifactId>
			<version>${bootstrap.version}</version>
		</dependency>
		<!-- Optional, for angularjs -->
		<dependency>
			<groupId>org.webjars</groupId>
			<artifactId>angularjs</artifactId>
			<version>${angularjs.version}</version>
		</dependency>
		
		<!-- <dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency> -->

		<!-- <dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-security</artifactId>
		</dependency> -->
		
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		
		<!-- for enabling this app as eureka client application -->
		<!-- <dependency>
		   <groupId>org.springframework.cloud</groupId>
		   <artifactId>spring-cloud-starter-eureka</artifactId>
		</dependency> -->

	</dependencies>
	
	<!-- <dependencyManagement>
      <dependencies>
         <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-dependencies</artifactId>
            <version>${spring-cloud.version}</version>
            <type>pom</type>
            <scope>import</scope>
         </dependency>
      </dependencies>
   </dependencyManagement> -->

	<build>
		<finalName>springboot_springmvc</finalName>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<!-- required for .war packaging -->
				<!-- <configuration>
                    <mainClass>com.springboot.DemoApplication</mainClass>
                </configuration> -->
			</plugin>
			<plugin>
			<groupId>org.apache.maven.plugins</groupId>
			<artifactId>maven-compiler-plugin</artifactId>
			<configuration>
				<source>${java.version}</source>
				<target>${java.version}</target>
			</configuration>
		</plugin>
		<plugin>
			<groupId>org.apache.maven.plugins</groupId>
			<artifactId>maven-war-plugin</artifactId>
		</plugin>
		<plugin>
			<groupId>org.apache.maven.plugins</groupId>
			<artifactId>maven-surefire-plugin</artifactId>
		</plugin>
		<plugin>
			<groupId>org.codehaus.mojo</groupId>
			<artifactId>sonar-maven-plugin</artifactId>
			<version>${sonar-maven-plugin.version}</version>
		</plugin>
		<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>0.8.2</version>
				<!-- <configuration>
			        <skip>${maven.test.skip}</skip>
			        <destFile>${basedir}/target/coverage-reports/jacoco-unit.exec</destFile>
			        <dataFile>${basedir}/target/coverage-reports/jacoco-unit.exec</dataFile>
			        <output>file</output>
			        <append>true</append>
			        <excludes>
			            <exclude>*MethodAccess</exclude>
			        </excludes>
			    </configuration> -->
				<executions>
					<execution>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
					</execution>
					<!-- attached to Maven test phase -->
					<execution>
						<id>report</id>
						<phase>test</phase>
						<goals>
							<goal>report</goal>
						</goals>
					</execution>
					<execution>
						<id>jacoco-check</id>
						<goals>
							<goal>check</goal>
						</goals>
						<configuration>
							<rules>
								<rule>
									<element>PACKAGE</element>
									<limits>
										<limit>
											<counter>LINE</counter>
											<value>COVEREDRATIO</value>
											<minimum>0.0</minimum>
										</limit>
									</limits>
								</rule>
							</rules>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
	<!-- <repositories>
	<repository>
	<id></id>
	<url></url>
	</repository>
	</repositories>	
	<pluginRepositories>
	<pluginRepository>
	<id></id>
	<url></url>
	</pluginRepository>
	</pluginRepositories> -->
</project>